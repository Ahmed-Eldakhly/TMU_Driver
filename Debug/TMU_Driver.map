Archive member included because of file (symbol)

e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./TMU_prog.o (__udivmodsi4)
e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./TMU_cfg.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

arr                 0x320             ./TMU_cfg.o
g_Flag              0x4               ./TMU_prog.o
TMU_flag            0x1               ./TMU_prog.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./DIO_Prog.o
LOAD ./TImer0_Prog.o
LOAD ./TMU_cfg.o
LOAD ./TMU_prog.o
LOAD ./main.o
LOAD e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xb3a
 *(.vectors)
 .vectors       0x00000000       0x54 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./DIO_Prog.o
 .text          0x00000092        0x0 ./TImer0_Prog.o
 .text          0x00000092        0x0 ./TMU_cfg.o
 .text          0x00000092        0x0 ./TMU_prog.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_WritePin
                0x00000092      0x1ea ./DIO_Prog.o
                0x00000092                DIO_WritePin
 .text.DIO_ReadPin
                0x0000027c       0xe4 ./DIO_Prog.o
                0x0000027c                DIO_ReadPin
 .text.DIO_SetPinDirection
                0x00000360      0x1ea ./DIO_Prog.o
                0x00000360                DIO_SetPinDirection
 .text.TIMER_init
                0x0000054a       0x4e ./TImer0_Prog.o
                0x0000054a                TIMER_init
 .text.TIMER_Deinit
                0x00000598       0x22 ./TImer0_Prog.o
                0x00000598                TIMER_Deinit
 .text.TIMER_Base
                0x000005ba       0x62 ./TMU_cfg.o
                0x000005ba                TIMER_Base
 .text.TMU_Init
                0x0000061c       0x36 ./TMU_prog.o
                0x0000061c                TMU_Init
 .text.TMU_Start
                0x00000652       0xec ./TMU_prog.o
                0x00000652                TMU_Start
 .text.TMU_Stop
                0x0000073e       0xe0 ./TMU_prog.o
                0x0000073e                TMU_Stop
 .text.TMU_Dispatch
                0x0000081e      0x114 ./TMU_prog.o
                0x0000081e                TMU_Dispatch
 .text.TMU_DeInit
                0x00000932       0x34 ./TMU_prog.o
                0x00000932                TMU_DeInit
 .text.__vector_10
                0x00000966       0x94 ./TMU_prog.o
                0x00000966                __vector_10
 .text.led_on   0x000009fa       0x16 ./main.o
                0x000009fa                led_on
 .text.led_off  0x00000a10       0x16 ./main.o
                0x00000a10                led_off
 .text.main     0x00000a26       0xcc ./main.o
                0x00000a26                main
 .text.libgcc   0x00000af2       0x44 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000af2                __udivmodsi4
 .text.libgcc   0x00000b36        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000b36        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000b36        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000b36                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000b36        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000b36                exit
                0x00000b36                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000b36        0x4 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000b3a                _etext = .

.data           0x00800060       0x10 load address 0x00000b3a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./DIO_Prog.o
 .data          0x00800060        0x0 ./TImer0_Prog.o
 .data          0x00800060        0x0 ./TMU_cfg.o
 .data          0x00800060        0x0 ./TMU_prog.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.C.1.1287
                0x00800060        0x8 ./main.o
 .rodata.C.0.1286
                0x00800068        0x8 ./main.o
 *(.gnu.linkonce.d*)
                0x00800070                . = ALIGN (0x2)
                0x00800070                _edata = .
                0x00800070                PROVIDE (__data_end, .)

.bss            0x00800070      0x328
                0x00800070                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800070        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800070        0x0 ./DIO_Prog.o
 .bss           0x00800070        0x0 ./TImer0_Prog.o
 .bss           0x00800070        0x0 ./TMU_cfg.o
 .bss           0x00800070        0x0 ./TMU_prog.o
 .bss           0x00800070        0x0 ./main.o
 .bss           0x00800070        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800070        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800070        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800070        0x0 e:/imt/sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.TMU_Config
                0x00800070        0x2 ./TMU_cfg.o
                0x00800070                TMU_Config
 .bss.g_count   0x00800072        0x1 ./TMU_prog.o
                0x00800072                g_count
 *(COMMON)
 COMMON         0x00800073      0x320 ./TMU_cfg.o
                0x00800073                arr
 COMMON         0x00800393        0x5 ./TMU_prog.o
                0x00800393                g_Flag
                0x00800397                TMU_flag
                0x00800398                PROVIDE (__bss_end, .)
                0x00000b3a                __data_load_start = LOADADDR (.data)
                0x00000b4a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800398        0x0
                0x00800398                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800398                PROVIDE (__noinit_end, .)
                0x00800398                _end = .
                0x00800398                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x10e0
 *(.stab)
 .stab          0x00000000      0x438 ./DIO_Prog.o
 .stab          0x00000438      0x1b0 ./TImer0_Prog.o
                                0x228 (size before relaxing)
 .stab          0x000005e8      0x240 ./TMU_cfg.o
                                0x2b8 (size before relaxing)
 .stab          0x00000828      0x678 ./TMU_prog.o
                                0x78c (size before relaxing)
 .stab          0x00000ea0      0x240 ./main.o
                                0x510 (size before relaxing)

.stabstr        0x00000000      0xcc6
 *(.stabstr)
 .stabstr       0x00000000      0xcc6 ./DIO_Prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(TMU_Driver.elf elf32-avr)
LOAD linker stubs
